#!/usr/bin/env bash
set -ex

export SOLC_FLAGS=--optimize

export ETH_FROM=$(seth coinbase)
export ETH_GAS=4400000

dapp build

export SETH_ASYNC=yes
GEMtx=$(dapp create DSToken 'ETH' 'ETH' 18)
SAItx=$(dapp create DSToken 'SAI' 'SAI' 18)
SINtx=$(dapp create DSToken 'SIN' 'SIN' 18)
SKRtx=$(dapp create DSToken 'SKR' 'SKR' 18)
POTtx=$(dapp create DSVault)
TAGtx=$(dapp create DSValue)

export SETH_ASYNC=no
GEM=$(seth receipt $GEMtx contractAddress)
SAI=$(seth receipt $SAItx contractAddress)
SIN=$(seth receipt $SINtx contractAddress)
SKR=$(seth receipt $SKRtx contractAddress)
POT=$(seth receipt $POTtx contractAddress)
TAG=$(seth receipt $TAGtx contractAddress)

TUB=$(dapp create Tub $GEM $SAI $SIN $SKR $POT $TAG)
export SAI_TUB=$TUB

export SETH_ASYNC=yes
seth send $SAI "setOwner(address)" $TUB
seth send $SIN "setOwner(address)" $TUB
seth send $SKR "setOwner(address)" $TUB
seth send $POT "setOwner(address)" $TUB

seth send $GEM "mint(uint128)" $(seth --to-uint256 $(seth --to-wei 100 ETH))

token approve $GEM $TUB $(seth --to-wei 100000 ETH)
token approve $SAI $TUB $(seth --to-wei 100000 ETH)
token approve $SKR $TUB $(seth --to-wei 100000 ETH)
token approve $SKR $POT $(seth --to-wei 100000 ETH)

seth send $TAG "poke(bytes32)" $(seth --to-uint256 $(seth --to-wei 1 ETH))
seth send $TUB "cork(uint128)" $(seth --to-uint256 $(seth --to-wei 100 ETH))

cat > load-env << EOF
#!/bin/bash

# sai deployment on $(seth chain) from $(git rev-parse HEAD)

export GEM=$GEM
export SAI=$SAI
export SIN=$SIN
export SKR=$SKR
export POT=$POT
export TAG=$TAG
export SAI_TUB=$TUB
EOF

echo SAI TUB DEPLOYED AT: $SAI_TUB
